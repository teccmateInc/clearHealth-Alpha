[{"E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\index.js":"1","E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\components\\404.js":"2","E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\components\\MenuAppBar.js":"3","E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\components\\Records\\RecordTimeLine.js":"4","E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\components\\Loading\\index.js":"5","E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\components\\Logo.js":"6","E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\components\\Records\\RecordSlider.js":"7","E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\components\\Alert\\Alert.js":"8","E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\components\\AllOpenRequestsTab.js":"9","E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\components\\AllRequestsTab.js":"10","E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\components\\Facilities\\FacilitiesModal.js":"11","E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\App.js":"12","E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\components\\Forms\\SignUp.js":"13","E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\components\\Facilities\\FacilitiesList.js":"14","E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\components\\Facilities\\FacilitiesDataList.js":"15","E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\components\\Facilities\\Details.js":"16","E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\components\\Forms\\Login.js":"17","E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\context\\UserContext.js":"18","E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\components\\Facilities\\Facilities.js":"19","E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\components\\Requests.js":"20","E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\components\\Records\\DialogBox.js":"21","E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\components\\OpenRequestDataList.js":"22"},{"size":236,"mtime":1610699009936,"results":"23","hashOfConfig":"24"},{"size":264,"mtime":1610562286938,"results":"25","hashOfConfig":"24"},{"size":7879,"mtime":1610799847364,"results":"26","hashOfConfig":"24"},{"size":9737,"mtime":1610798018509,"results":"27","hashOfConfig":"24"},{"size":569,"mtime":1610572156709,"results":"28","hashOfConfig":"24"},{"size":179,"mtime":1610559812545,"results":"29","hashOfConfig":"24"},{"size":4700,"mtime":1610740291311,"results":"30","hashOfConfig":"24"},{"size":767,"mtime":1610569204323,"results":"31","hashOfConfig":"24"},{"size":898,"mtime":1610559643499,"results":"32","hashOfConfig":"24"},{"size":898,"mtime":1610559646673,"results":"33","hashOfConfig":"24"},{"size":14851,"mtime":1610959710327,"results":"34","hashOfConfig":"24"},{"size":2949,"mtime":1610890709163,"results":"35","hashOfConfig":"24"},{"size":10937,"mtime":1610887507763,"results":"36","hashOfConfig":"24"},{"size":1645,"mtime":1610958992591,"results":"37","hashOfConfig":"24"},{"size":4042,"mtime":1610959421030,"results":"38","hashOfConfig":"24"},{"size":1426,"mtime":1610891474363,"results":"39","hashOfConfig":"24"},{"size":5624,"mtime":1610733258338,"results":"40","hashOfConfig":"24"},{"size":77,"mtime":1610529433624,"results":"41","hashOfConfig":"24"},{"size":144,"mtime":1610958895166,"results":"42","hashOfConfig":"24"},{"size":135,"mtime":1610559793773,"results":"43","hashOfConfig":"24"},{"size":3864,"mtime":1610740644899,"results":"44","hashOfConfig":"24"},{"size":1480,"mtime":1610559782749,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7x45fa",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":9,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\index.js",[],"E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\components\\404.js",[],["96","97"],"E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\components\\MenuAppBar.js",["98"],"import React, { useContext } from 'react'\nimport { fade, makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Badge from '@material-ui/core/Badge'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Menu from '@material-ui/core/Menu'\nimport MoreIcon from '@material-ui/icons/MoreVert'\nimport logo from '../assets/imgs/logo.png'\nimport TimelineIcon from '@material-ui/icons/Timeline'\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital'\nimport AddToPhotosIcon from '@material-ui/icons/AddToPhotos'\nimport VpnKeyIcon from '@material-ui/icons/VpnKey'\nimport { Link, useLocation, useHistory } from 'react-router-dom'\nimport UserContext from '../context/UserContext'\nimport { Button } from '@material-ui/core'\nimport TimeLineFilter from './Records/TimeLineFilter'\n\nconst useStyles = makeStyles((theme) => ({\n  links: {\n    textDecoration: 'None',\n    color: '#6dcdb1',\n    fontSize: 20,\n  },\n\n  highlighted: {\n    alignItems: 'right',\n    backgroundColor: '#6dcdb1',\n    textDecoration: 'None',\n    color: '#fff',\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 50,\n    borderTopLeftRadius: 50,\n    borderTopRightRadius: 50,\n    fontSize: 20,\n    padding: 15,\n    // fontWeight: '500',\n  },\n  highlightedLink: {\n    '& svg': {\n      color: '#6dcdb1',\n    },\n    textDecoration: 'None',\n    color: '#000',\n    fontSize: 20,\n    paddingTop: 18,\n    paddingBottom: 14,\n    fontWeight: '500',\n    borderBottom: '4px solid #6dcdb1',\n  },\n  iconsStyle: {\n    fontSize: 16,\n    paddingRight: 2,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  timelinebar: {\n    position: 'fixed',\n    margin: '-11px 0',\n    boxShadow: '0 4px 6px 0 #8f988fd1',\n    padding: '0 232px',\n    backgroundColor: 'white',\n  },\n  search: {\n    color: '#6dcdb1',\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    border: '1px solid grey',\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n}))\n\nexport default function MenuAppBar(props) {\n  const classes = useStyles()\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null)\n\n  const isMenuOpen = Boolean(anchorEl)\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl)\n\n  const { userData, setUserData } = useContext(UserContext)\n\n  const history = useHistory()\n\n  const logout = () => {\n    setUserData({\n      token: null,\n      user: null,\n    })\n    localStorage.removeItem('auth-token')\n    history.push('/')\n  }\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null)\n  }\n\n  const handleMenuClose = () => {\n    setAnchorEl(null)\n    handleMobileMenuClose()\n  }\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget)\n  }\n\n  const menuId = 'primary-search-account-menu'\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  )\n\n  const mobileMenuId = 'primary-search-account-menu-mobile'\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    ></Menu>\n  )\n\n  const location = useLocation()\n\n  return (\n    <div className={classes.grow} style={{ marginBottom: '75px' }}>\n      <AppBar\n        position='fixed'\n        style={{ backgroundColor: '#fff', color: '#6dcdb1' }}\n      >\n        <Toolbar>\n          <img\n            src={logo}\n            alt='ClearHealth'\n            width='15%'\n            onClick={(event) => (window.location.href = '/Timeline')}\n          />\n          <Link\n            to='/Timeline'\n            className={\n              location.pathname === '/Timeline'\n                ? classes.highlightedLink\n                : classes.links\n            }\n          >\n            <TimelineIcon className={classes.iconsStyle} />\n            Timeline\n          </Link>\n          &nbsp;&nbsp;&nbsp;\n          <Link\n            to='/Facilities'\n            className={\n              location.pathname === '/Facilities'\n                ? classes.highlightedLink\n                : classes.links\n            }\n          >\n            <LocalHospitalIcon className={classes.iconsStyle} />\n            Facilities\n          </Link>\n          &nbsp;&nbsp;&nbsp;\n          <Link\n            to='/Requests'\n            className={\n              location.pathname === '/Requests'\n                ? classes.highlightedLink\n                : classes.links\n            }\n          >\n            <AddToPhotosIcon className={classes.iconsStyle} />\n            Requests\n          </Link>\n          &nbsp;&nbsp;&nbsp;\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <Button onClick={logout} className={classes.highlighted}>\n              {' '}\n              <VpnKeyIcon\n                className={classes.iconsStyle}\n                style={{ color: '#FFF' }}\n              />{' '}\n              Logout\n            </Button>\n            <IconButton aria-label='show 4 new mails' color='inherit'>\n              <Badge></Badge>\n            </IconButton>\n            <IconButton aria-label='show 17 new notifications' color='inherit'>\n              <Badge></Badge>\n            </IconButton>\n            <IconButton\n              edge='end'\n              aria-label='account of current user'\n              aria-controls={menuId}\n              aria-haspopup='true'\n              onClick={handleProfileMenuOpen}\n              color='inherit'\n            ></IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label='show more'\n              aria-controls={mobileMenuId}\n              aria-haspopup='true'\n              onClick={handleMobileMenuOpen}\n              color='inherit'\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <TimeLineFilter classes={classes} />\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  )\n}\n","E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\components\\Records\\RecordTimeLine.js",[],"E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\components\\Loading\\index.js",[],"E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\components\\Logo.js",[],"E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\components\\Records\\RecordSlider.js",["99","100"],"import React, { useState } from 'react'\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\r\nimport MobileStepper from '@material-ui/core/MobileStepper'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'\r\nimport DialogBox from './DialogBox'\r\n\r\nconst reportDetails = [\r\n  {\r\n    label: 'San Francisco – Oakland Bay Bridge, United States',\r\n    imgPath:\r\n      'https://images.unsplash.com/photo-1537944434965-cf4679d1a598?auto=format&fit=crop&w=400&h=250&q=60',\r\n  },\r\n  {\r\n    label: 'Bird',\r\n    imgPath:\r\n      'https://images.unsplash.com/photo-1538032746644-0212e812a9e7?auto=format&fit=crop&w=400&h=250&q=60',\r\n  },\r\n  {\r\n    label: 'Bali, Indonesia',\r\n    imgPath:\r\n      'https://images.unsplash.com/photo-1537996194471-e657df975ab4?auto=format&fit=crop&w=400&h=250&q=80',\r\n  },\r\n  {\r\n    label: 'NeONBRAND Digital Marketing, Las Vegas, United States',\r\n    imgPath:\r\n      'https://images.unsplash.com/photo-1518732714860-b62714ce0c59?auto=format&fit=crop&w=400&h=250&q=60',\r\n  },\r\n  {\r\n    label: 'Goč, Serbia',\r\n    imgPath:\r\n      'https://images.unsplash.com/photo-1512341689857-198e7e2f3ca8?auto=format&fit=crop&w=400&h=250&q=60',\r\n  },\r\n]\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // maxWidth: 400,\r\n    // flexGrow: 1,\r\n    padding: '50px 0 0',\r\n    width: '50%',\r\n    // height: 'inherit',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  root0: {\r\n    textAlign: 'center',\r\n    maxWidth: 400,\r\n    flexGrow: 1,\r\n    width: 180,\r\n    '&:hover': {\r\n      color: 'blue',\r\n      opacity: '0.75',\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    height: 50,\r\n    paddingLeft: theme.spacing(4),\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  img: {\r\n    height: '75%',\r\n    width: '100%',\r\n    overflow: 'hidden',\r\n    display: 'block',\r\n    width: '100%',\r\n  },\r\n  demoImg: {\r\n    height: '170px',\r\n    width: '170px',\r\n    margin: '0 6px',\r\n    borderRadius: '5px',\r\n  },\r\n}))\r\n\r\nexport default function RecordImageSlider() {\r\n  const classes = useStyles()\r\n  const theme = useTheme()\r\n  const [activeStep, setActiveStep] = React.useState(0)\r\n  const maxSteps = reportDetails.length\r\n\r\n  const [openDialog, setOpenDialog] = useState(false)\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1)\r\n  }\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1)\r\n  }\r\n\r\n  let OpenSlider = () => {\r\n    return (\r\n      <div className={classes.root}>\r\n        <Paper square elevation={0} className={classes.header}>\r\n          <Typography>{reportDetails[activeStep].label}</Typography>\r\n          {/* Text Overflow Ellipsis */}\r\n        </Paper>\r\n        <img\r\n          className={classes.img}\r\n          src={reportDetails[activeStep].imgPath}\r\n          alt={reportDetails[activeStep].label}\r\n        />\r\n        <span>View Images</span>\r\n        <MobileStepper\r\n          steps={maxSteps}\r\n          position='static'\r\n          variant='text'\r\n          activeStep={activeStep}\r\n          nextButton={\r\n            <Button\r\n              size='small'\r\n              onClick={handleNext}\r\n              disabled={activeStep === maxSteps - 1}\r\n            >\r\n              Next\r\n              {theme.direction === 'rtl' ? (\r\n                <KeyboardArrowLeft />\r\n              ) : (\r\n                <KeyboardArrowRight />\r\n              )}\r\n            </Button>\r\n          }\r\n          backButton={\r\n            <Button\r\n              size='small'\r\n              onClick={handleBack}\r\n              disabled={activeStep === 0}\r\n            >\r\n              {theme.direction === 'rtl' ? (\r\n                <KeyboardArrowRight />\r\n              ) : (\r\n                <KeyboardArrowLeft />\r\n              )}\r\n              Back\r\n            </Button>\r\n          }\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  let openDialogBox = () => {\r\n    setOpenDialog(true)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root0} onClick={openDialogBox}>\r\n      <img\r\n        className={classes.demoImg}\r\n        src={reportDetails[activeStep].imgPath}\r\n        alt={reportDetails[activeStep].label}\r\n      />\r\n      <span>View Images</span>\r\n      {openDialog && (\r\n        <DialogBox\r\n          _open={openDialog}\r\n          onclose={(v) => setOpenDialog(v)}\r\n          styles={classes}\r\n          reportDetails={reportDetails}\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\components\\Alert\\Alert.js",[],"E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\components\\AllOpenRequestsTab.js",[],"E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\components\\AllRequestsTab.js",[],"E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\components\\Facilities\\FacilitiesModal.js",["101","102"],"E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\App.js",["103"],"import React, { useState, useEffect } from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport Login from './components/Forms/Login'\nimport SignUp from './components/Forms/SignUp'\nimport ForgetPassword from './components/Forms/ForgetPassword'\nimport RecordsTimeLine from './components/Records/RecordTimeLine'\nimport Facilities from './components/Facilities/Facilities'\nimport Requests from './components/Requests'\nimport Share from './components/Share'\nimport MenuAppBar from './components/MenuAppBar'\nimport NotFound from './components/404'\nimport './style.css'\nimport UserContext from './context/UserContext'\nimport Axios from 'axios'\nimport { useHistory } from 'react-router-dom'\nimport Loader from './components/Loading'\n\nexport default function App() {\n  const history = useHistory()\n  const [loading, setLoading] = useState(false)\n  const [userData, setUserData] = useState({\n    token: null,\n    user: null,\n  })\n\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      let token = localStorage.getItem('auth-token')\n      if (token === null) {\n        localStorage.removeItem('auth-token')\n        history.push('/')\n      } else {\n        setLoading(true)\n        const tokenRes = await Axios.post(\n          'http://localhost:5000/users/tokenIsValid',\n          null,\n          { headers: { 'x-auth-token': token } }\n        )\n        if (tokenRes.data || userData.token) {\n          const userRes = await Axios.get('http://localhost:5000/users/', {\n            headers: { 'x-auth-token': token },\n          })\n          setUserData({\n            token,\n            user: userRes.data,\n          })\n          history.push('/Timeline')\n        } else {\n          setLoading(false)\n          history.push('/')\n        }\n      }\n    }\n\n    checkLoggedIn()\n    return () => setLoading(false)\n  }, [setUserData])\n\n  return (\n    <div className='App'>\n      {!userData.token && loading ? (\n        <Loader />\n      ) : (\n        <UserContext.Provider value={{ userData, setUserData }}>\n          <Switch>\n            <Route path='/' component={Login} exact />\n            <Route path='/Timeline' exact>\n              <MenuAppBar />\n              <RecordsTimeLine />\n            </Route>\n            <Route path='/Facilities' exact>\n              <MenuAppBar />\n              <Facilities />\n            </Route>\n            <Route path='/Requests' exact>\n              <MenuAppBar />\n              <div style={{ marginBottom: 150 }}></div>\n              <Requests />\n            </Route>\n            <Route path='/Share' exact>\n              <MenuAppBar />\n              <Share />\n            </Route>\n            <Route path='/SignUp' exact>\n              <SignUp />\n            </Route>\n            <Route path='/ForgetPassword' exact>\n              <ForgetPassword />\n            </Route>\n            <Route component={NotFound} exact></Route>\n          </Switch>\n        </UserContext.Provider>\n      )}\n    </div>\n  )\n}\n","E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\components\\Forms\\SignUp.js",["104","105","106","107"],"import React, { useState, useContext, useEffect } from 'react'\nimport { Grid, Paper, TextField, Button, Typography } from '@material-ui/core'\nimport LockOpenIcon from '@material-ui/icons/LockOpen'\nimport { useForm } from 'react-hook-form'\nimport NumberFormat from 'react-number-format'\nimport Logo from '../Logo'\nimport { Link } from 'react-router-dom'\nimport Loader from '../Loading'\nimport Alerts from '../Alert/Alert'\nimport ImgSlider from './Slider'\nimport { useHistory } from 'react-router-dom'\nimport UserContext from '../../context/UserContext'\nimport Axios from 'axios'\n\nconst linkStyle = {\n  textDecoration: 'none',\n  color: 'black',\n  fontWeight: '700',\n}\n\nconst SignUp = (props) => {\n  let { register, handleSubmit, errors } = useForm()\n  let [serverRes, setServerRes] = useState({ msg: null, type: 'error' })\n  let [loading, setLoading] = useState(false)\n\n  const { userData, setUserData } = useContext(UserContext)\n  const history = useHistory()\n\n  const onSubmit = async (data) => {\n    try {\n      setLoading(true)\n      const newUser = { ...data }\n      const { email, password } = data\n      await Axios.post('http://localhost:5000/users/register', newUser)\n      const loginRes = await Axios.post('http://localhost:5000/users/login', {\n        email,\n        password,\n      })\n      if (loginRes.data.success) {\n        localStorage.setItem('auth-token', loginRes.data.token)\n        setLoading(false)\n        setUserData({\n          token: loginRes.data.token,\n          user: loginRes.data.user,\n        })\n        props.history.push('/Timeline')\n      } else {\n        setLoading(false)\n        setServerRes({ msg: 'Some Error Has Occurred While Registering' })\n      }\n    } catch (err) {\n      setLoading(false)\n      setServerRes({ msg: err.response.data.msg })\n    }\n  }\n\n  // useEffect(() => {\n  //   if (userData.user) props.history.push('/')\n  // })\n\n  return (\n    <Grid container>\n      {loading && <Loader />}\n      <Grid item xs={12} sm={6}>\n        <Paper style={{ padding: '32px 0' }}>\n          <Grid align='center'>\n            <Logo />\n          </Grid>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <Grid style={{ margin: '5px auto', width: '60%' }}>\n              {serverRes.msg && (\n                <Alerts msg={serverRes.msg} type={serverRes.type} />\n              )}\n              <h2 align='left'>Welcome to ClearHealth! </h2>\n              <h4 align='left' style={{ margin: '15px auto' }}>\n                To get started, enter your email address.{' '}\n              </h4>\n              <TextField\n                label='First Name'\n                placeholder='Enter First Name'\n                fullWidth\n                required\n                variant='outlined'\n                type='text'\n                style={{ marginBottom: '16px' }}\n                name='firstname'\n                inputRef={register({\n                  required: 'First Name is required',\n                  minLength: {\n                    value: 2,\n                    message: 'Minimum 2 characters is required!',\n                  },\n                  maxLength: {\n                    value: 256,\n                    message: 'Maximum 256 characters is allowed!',\n                  },\n                })}\n                error={errors.firstname ? true : false}\n                helperText={\n                  errors.firstname && (\n                    <span role='alert'>\n                      {errors.firstname.type === 'required'\n                        ? errors.firstname.message\n                        : errors.firstname.type === 'minLength'\n                        ? errors.firstname.message\n                        : errors.firstname.message}\n                    </span>\n                  )\n                }\n              />\n              <TextField\n                label='Last Name'\n                placeholder='Enter Last Name'\n                fullWidth\n                required\n                variant='outlined'\n                type='text'\n                style={{ marginBottom: '16px' }}\n                name='lastname'\n                inputRef={register({\n                  required: 'Last Name is required',\n                  minLength: {\n                    value: 2,\n                    message: 'Minimum 2 characters is required!',\n                  },\n                  maxLength: {\n                    value: 256,\n                    message: 'Maximum 256 characters is allowed!',\n                  },\n                })}\n                error={errors.lastname ? true : false}\n                helperText={\n                  errors.lastname && (\n                    <span role='alert'>\n                      {errors.lastname.type === 'required'\n                        ? errors.lastname.message\n                        : errors.lastname.type === 'minLength'\n                        ? errors.lastname.message\n                        : errors.lastname.message}\n                    </span>\n                  )\n                }\n              />\n              <TextField\n                label='Email Address'\n                placeholder='Enter Email Address'\n                fullWidth\n                required\n                variant='outlined'\n                starticon={<LockOpenIcon />}\n                type='email'\n                style={{ marginBottom: '16px' }}\n                name='email'\n                inputRef={register({\n                  required: 'E-Mail is required',\n                  pattern: {\n                    value: /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,3}$/g,\n                    message: 'Invalid Email Address!',\n                  },\n                  maxLength: {\n                    value: 256,\n                    message: 'Maximum 256 characters is allowed!',\n                  },\n                })}\n                error={errors.email ? true : false}\n                helperText={\n                  errors.email && (\n                    <span role='alert'>\n                      {errors.email.type === 'required'\n                        ? errors.email.message\n                        : errors.email.type === 'pattern'\n                        ? errors.email.message\n                        : errors.email.message}\n                    </span>\n                  )\n                }\n              />\n              <TextField\n                label='Password'\n                placeholder='Enter Password'\n                fullWidth\n                required\n                variant='outlined'\n                type='password'\n                style={{ marginBottom: '16px' }}\n                name='password'\n                inputRef={register({\n                  required: 'Password is required',\n                  minLength: {\n                    value: 6,\n                    message: 'Minimum 6 characters is required!',\n                  },\n                  maxLength: {\n                    value: 21,\n                    message: 'Password Maximum 21 characters long!',\n                  },\n                })}\n                error={errors.password ? true : false}\n                helperText={\n                  errors.password && (\n                    <span role='alert'>\n                      {errors.password.type === 'required'\n                        ? errors.password.message\n                        : errors.password.type === 'minLength'\n                        ? errors.password.message\n                        : errors.password.message}\n                    </span>\n                  )\n                }\n              />\n              <TextField\n                label='Confirm Password'\n                placeholder='Enter Confirm Password Again'\n                fullWidth\n                required\n                variant='outlined'\n                type='password'\n                style={{ marginBottom: '16px' }}\n                name='passwordCheck'\n                autoComplete='password'\n                inputRef={register({\n                  required: 'E-Mail is required',\n                  minLength: {\n                    value: 6,\n                    message: 'Minimum 6 characters is required!',\n                  },\n                  maxLength: {\n                    value: 21,\n                    message: 'Password Maximum 21 characters long!',\n                  },\n                })}\n                error={errors.passwordCheck ? true : false}\n                helperText={\n                  errors.passwordCheck && (\n                    <span role='alert'>\n                      {errors.passwordCheck.type === 'required'\n                        ? errors.passwordCheck.message\n                        : errors.passwordCheck.type === 'minLength'\n                        ? errors.passwordCheck.message\n                        : errors.passwordCheck.message}\n                    </span>\n                  )\n                }\n              />\n\n              <NumberFormat\n                format='######-##-####'\n                mask='_'\n                customInput={TextField}\n                label='IC Number'\n                placeholder='Enter IC Number'\n                fullWidth\n                required\n                variant='outlined'\n                name='icNumber'\n                inputRef={register({\n                  required: 'IC is required',\n                  minLength: {\n                    value: 12,\n                    message: 'Minimum 12 characters is required!',\n                  },\n                })}\n                error={errors.icNumber ? true : false}\n                helperText={\n                  errors.icNumber && (\n                    <span role='alert'>\n                      {errors.icNumber.type === 'required'\n                        ? errors.icNumber.message\n                        : errors.icNumber.type === 'minLength'\n                        ? errors.icNumber.message\n                        : errors.icNumber.message}\n                    </span>\n                  )\n                }\n              />\n\n              <Button\n                variant='contained'\n                color='primary'\n                fullWidth\n                type='submit'\n                // onClick={handleSubmit(onSubmit)}\n                style={{\n                  height: 50,\n                  marginTop: 25,\n                  backgroundColor: '#6dcdb1',\n                }}\n                endIcon={<LockOpenIcon />}\n              >\n                Continue\n              </Button>\n              <Typography align='left' style={{ marginTop: 50 }}>\n                {' '}\n                Already Have An Account?&nbsp;\n                <Link to='/' style={linkStyle}>\n                  Sign In\n                </Link>\n              </Typography>\n            </Grid>\n          </form>\n        </Paper>\n      </Grid>\n\n      {/* <img\n          alt='Picnic Health'\n          src={BackgroundImage}\n          style={{ width: '100%', height: '100vh' }}\n        /> */}\n      <ImgSlider />\n    </Grid>\n  )\n}\n\nexport default SignUp\n","E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\components\\Facilities\\FacilitiesList.js",[],"E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\components\\Facilities\\FacilitiesDataList.js",[],"E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\components\\Facilities\\Details.js",["108","109","110","111","112","113","114","115","116","117"],"E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\components\\Forms\\Login.js",["118"],"import React, { useState, useContext } from 'react'\nimport { Grid, Paper, TextField, Button, Typography } from '@material-ui/core'\nimport LockOpenIcon from '@material-ui/icons/LockOpen'\nimport { useForm } from 'react-hook-form'\nimport Logo from '../Logo'\nimport { Link } from 'react-router-dom'\nimport Alerts from '../Alert/Alert'\nimport Loader from '../Loading'\nimport ImgSlider from './Slider'\nimport Axios from 'axios'\nimport UserContext from '../../context/UserContext'\n\nconst linkStyle = {\n  textDecoration: 'none',\n  color: 'black',\n  fontWeight: '700',\n}\n\nconst Login = (props) => {\n  let { register, handleSubmit, errors } = useForm()\n  let [serverRes, setServerRes] = useState({ msg: null, type: 'error' })\n  let [loading, setLoading] = useState(false)\n  const { setUserData } = useContext(UserContext)\n\n  const onSubmit = async (data) => {\n    try {\n      setLoading(true)\n      const loginUser = { ...data }\n      const loginRes = await Axios.post(\n        'http://localhost:5000/users/login',\n        loginUser\n      )\n      if (loginRes.data.success) {\n        localStorage.setItem('auth-token', loginRes.data.token)\n        setLoading(false)\n        setUserData({\n          token: loginRes.data.token,\n          user: loginRes.data.user,\n        })\n        props.history.push('/Timeline')\n      } else {\n        setLoading(false)\n        setServerRes({ msg: 'Incorrect E-Mail or Password' })\n      }\n    } catch (err) {\n      setLoading(false)\n      setServerRes({ msg: err.response.data.msg })\n    }\n  }\n\n  // useEffect(() => {\n  //   if (!userData.user) props.history.push('/')\n  // })\n\n  return (\n    <Grid container style={{ height: '100vh' }}>\n      {loading && <Loader />}\n      <Grid item xs={12} sm={6}>\n        <Paper style={{ padding: '32px 0', boxShadow: 'unset' }}>\n          <Grid align='center'>\n            <Logo />\n          </Grid>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <Grid style={{ margin: '5px auto', width: '60%' }}>\n              {serverRes.msg && (\n                <Alerts msg={serverRes.msg} type={serverRes.type} />\n              )}\n              <h2 align='left'>Log In</h2>\n              <TextField\n                label='Email Address'\n                placeholder='Enter Email Address'\n                type='email'\n                name='email'\n                fullWidth\n                required={true}\n                variant='outlined'\n                style={{ marginBottom: 16 }}\n                inputRef={register({\n                  required: 'E-Mail is required',\n                  pattern: {\n                    value: /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,3}$/g,\n                    message: 'Invalid Email Address!',\n                  },\n                  maxLength: {\n                    value: 256,\n                    message: 'Maximum 256 characters is allowed!',\n                  },\n                })}\n                error={errors.email ? true : false}\n                helperText={\n                  errors.email && (\n                    <span role='alert'>\n                      {errors.email.type === 'required'\n                        ? errors.email.message\n                        : errors.email.type === 'pattern'\n                        ? errors.email.message\n                        : errors.email.message}\n                    </span>\n                  )\n                }\n              />\n              <TextField\n                label='Password'\n                placeholder='Enter Password'\n                fullWidth\n                required\n                variant='outlined'\n                type='password'\n                name='password'\n                inputRef={register({\n                  required: 'Password is required',\n                  minLength: {\n                    value: 6,\n                    message: 'Minimum 6 characters/digits is required!',\n                  },\n                  maxLength: {\n                    value: 21,\n                    message: 'Maximum 21 characters is allowed!',\n                  },\n                })}\n                error={errors.password ? true : false}\n                helperText={\n                  errors.password && (\n                    <span role='alert'>\n                      {errors.password.type === 'required'\n                        ? errors.password.message\n                        : errors.password.type === 'minLength'\n                        ? errors.password.message\n                        : errors.password.message}\n                    </span>\n                  )\n                }\n              />\n              <Button\n                variant='contained'\n                onClick={handleSubmit(onSubmit)}\n                fullWidth\n                type='submit'\n                style={{\n                  height: 50,\n                  marginTop: 25,\n                  backgroundColor: '#6dcdb1',\n                  color: '#FFF',\n                }}\n                endIcon={<LockOpenIcon />}\n              >\n                Sign In\n              </Button>\n              <Typography align='left' style={{ marginTop: 10 }}>\n                <Link to='/ForgetPassword' style={linkStyle}>\n                  Forgot Password?\n                </Link>\n              </Typography>\n              <Typography align='left' style={{ marginTop: 50 }}>\n                {' '}\n                Do you have an account?&nbsp;\n                <Link to='/SignUp' style={linkStyle}>\n                  Sign Up\n                </Link>\n              </Typography>\n            </Grid>\n          </form>\n        </Paper>\n      </Grid>\n      <ImgSlider />\n    </Grid>\n  )\n}\n\nexport default Login\n","E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\context\\UserContext.js",[],"E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\components\\Facilities\\Facilities.js",[],"E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\components\\Requests.js",[],"E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\components\\Records\\DialogBox.js",["119","120"],"E:\\Projects\\Zara's ClearHealth\\clearhealth\\frontend\\src\\components\\OpenRequestDataList.js",[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":136,"column":11,"nodeType":"127","messageId":"128","endLine":136,"endColumn":19},{"ruleId":"129","severity":1,"message":"130","line":72,"column":5,"nodeType":"131","messageId":"132","endLine":72,"endColumn":10},{"ruleId":"125","severity":1,"message":"133","line":98,"column":7,"nodeType":"127","messageId":"128","endLine":98,"endColumn":17},{"ruleId":"125","severity":1,"message":"134","line":14,"column":8,"nodeType":"127","messageId":"128","endLine":14,"endColumn":13},{"ruleId":"125","severity":1,"message":"135","line":43,"column":21,"nodeType":"127","messageId":"128","endLine":43,"endColumn":33},{"ruleId":"136","severity":1,"message":"137","line":57,"column":6,"nodeType":"138","endLine":57,"endColumn":19,"suggestions":"139"},{"ruleId":"125","severity":1,"message":"140","line":1,"column":39,"nodeType":"127","messageId":"128","endLine":1,"endColumn":48},{"ruleId":"125","severity":1,"message":"126","line":26,"column":11,"nodeType":"127","messageId":"128","endLine":26,"endColumn":19},{"ruleId":"125","severity":1,"message":"141","line":27,"column":9,"nodeType":"127","messageId":"128","endLine":27,"endColumn":16},{"ruleId":"142","severity":1,"message":"143","line":157,"column":34,"nodeType":"144","messageId":"145","endLine":157,"endColumn":35,"suggestions":"146"},{"ruleId":"125","severity":1,"message":"147","line":7,"column":7,"nodeType":"127","messageId":"128","endLine":7,"endColumn":21},{"ruleId":"148","severity":2,"message":"149","line":12,"column":27,"nodeType":"127","messageId":"150","endLine":12,"endColumn":37},{"ruleId":"148","severity":2,"message":"149","line":13,"column":31,"nodeType":"127","messageId":"150","endLine":13,"endColumn":41},{"ruleId":"148","severity":2,"message":"149","line":14,"column":39,"nodeType":"127","messageId":"150","endLine":14,"endColumn":49},{"ruleId":"148","severity":2,"message":"149","line":15,"column":38,"nodeType":"127","messageId":"150","endLine":15,"endColumn":48},{"ruleId":"148","severity":2,"message":"149","line":16,"column":37,"nodeType":"127","messageId":"150","endLine":16,"endColumn":47},{"ruleId":"148","severity":2,"message":"149","line":17,"column":29,"nodeType":"127","messageId":"150","endLine":17,"endColumn":39},{"ruleId":"148","severity":2,"message":"149","line":18,"column":31,"nodeType":"127","messageId":"150","endLine":18,"endColumn":41},{"ruleId":"148","severity":2,"message":"149","line":21,"column":18,"nodeType":"127","messageId":"150","endLine":21,"endColumn":28},{"ruleId":"148","severity":2,"message":"149","line":21,"column":53,"nodeType":"127","messageId":"150","endLine":21,"endColumn":63},{"ruleId":"142","severity":1,"message":"143","line":81,"column":34,"nodeType":"144","messageId":"145","endLine":81,"endColumn":35,"suggestions":"151"},{"ruleId":"125","severity":1,"message":"152","line":1,"column":28,"nodeType":"127","messageId":"128","endLine":1,"endColumn":36},{"ruleId":"136","severity":1,"message":"153","line":56,"column":6,"nodeType":"138","endLine":56,"endColumn":12,"suggestions":"154"},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"no-unused-vars","'userData' is assigned a value but never used.","Identifier","unusedVar","no-dupe-keys","Duplicate key 'width'.","ObjectExpression","unexpected","'OpenSlider' is assigned a value but never used.","'Axios' is defined but never used.","'setServerRes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'userData.token'. Either include them or remove the dependency array.","ArrayExpression",["157"],"'useEffect' is defined but never used.","'history' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["158","159"],"'FacilityDetail' is assigned a value but never used.","no-undef","'facilities' is not defined.","undef",["160","161"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'onclose'. Either include it or remove the dependency array. If 'onclose' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["162"],"no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},{"messageId":"165","fix":"166","desc":"167"},{"messageId":"168","fix":"169","desc":"170"},{"messageId":"165","fix":"171","desc":"167"},{"messageId":"168","fix":"172","desc":"170"},{"desc":"173","fix":"174"},"Update the dependencies array to be: [history, setUserData, userData.token]",{"range":"175","text":"176"},"removeEscape",{"range":"177","text":"178"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"179","text":"180"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"181","text":"178"},{"range":"182","text":"180"},"Update the dependencies array to be: [onclose, open]",{"range":"183","text":"184"},[1824,1837],"[history, setUserData, userData.token]",[5502,5503],"",[5502,5502],"\\",[2599,2600],[2599,2599],[1698,1704],"[onclose, open]"]